{"expireTime":9007200821216466000,"key":"transformer-remark-markdown-html-ast-5f27eb5668b2986c99f0fa55b8d13f28-gatsby-remark-prismjsgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Reference Book : ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":18,"offset":18}}},{"type":"element","tagName":"a","properties":{"href":"https://www.youngjin.com/book/book_detail.asp?prod_cd=9788931436914&seq=4628&cate_cd=1&child_cate_cd=&goPage=11&orderByCd=3"},"children":[{"type":"text","value":"Java 언어로 배우는 디자인 패턴 입문","position":{"start":{"line":2,"column":19,"offset":19},"end":{"line":2,"column":41,"offset":41}}}],"position":{"start":{"line":2,"column":18,"offset":18},"end":{"line":2,"column":167,"offset":167}}},{"type":"text","value":", Yuki Hiroshi, 영진닷컴","position":{"start":{"line":2,"column":167,"offset":167},"end":{"line":2,"column":187,"offset":187}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":187,"offset":187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":4,"column":1,"offset":189},"end":{"line":4,"column":4,"offset":192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Singleton 패턴","position":{"start":{"line":6,"column":5,"offset":198},"end":{"line":6,"column":17,"offset":210}}}],"position":{"start":{"line":6,"column":1,"offset":194},"end":{"line":6,"column":17,"offset":210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"어떤 클래스의 인스턴스가 전체 시스템에서 ‘단 하나’만 있어야 할 때","position":{"start":{"line":8,"column":3,"offset":214},"end":{"line":8,"column":41,"offset":252}}}],"position":{"start":{"line":8,"column":3,"offset":214},"end":{"line":8,"column":41,"offset":252}}},{"type":"text","value":"\n"}],"position":{"start":{"line":8,"column":1,"offset":212},"end":{"line":8,"column":41,"offset":252}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"인스턴스 생성(new)을 외부에서 직접 할 수 없게 하고 내부에서만 하는 구조로 하여 인스턴스 개수를 1개로 통제한다. 물론 프로그래머가 주의해서 인스턴스를 1개만 만들어서 쓸 수도 있지만, 프로그램 상에서 표현해둘 경우 1개만 존재한다는 것을 보증할 수 있게된다.","position":{"start":{"line":10,"column":1,"offset":254},"end":{"line":10,"column":149,"offset":402}}}],"position":{"start":{"line":10,"column":1,"offset":254},"end":{"line":10,"column":149,"offset":402}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton</span> singleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"싱글톤 인스턴스 생성\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Singleton</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> singleton<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":12,"column":1,"offset":404},"end":{"line":24,"column":4,"offset":654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<b>","position":{"start":{"line":26,"column":1,"offset":656},"end":{"line":26,"column":4,"offset":659}}},{"type":"text","value":"생성자가 public이 아니라 private 인 것에 주목","position":{"start":{"line":26,"column":4,"offset":659},"end":{"line":26,"column":36,"offset":691}}},{"type":"raw","value":"</b>","position":{"start":{"line":26,"column":36,"offset":691},"end":{"line":26,"column":40,"offset":695}}},{"type":"text","value":" -> 외부에서 인스턴스 생성 불가능","position":{"start":{"line":26,"column":40,"offset":695},"end":{"line":26,"column":60,"offset":715}}}],"position":{"start":{"line":26,"column":1,"offset":656},"end":{"line":26,"column":60,"offset":715}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Singleton main start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Singleton</span> obj1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Singleton</span> obj2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>obj1 <span class=\"token operator\">==</span> obj2<span class=\"token punctuation\">)</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj1과 obj2는 같은 인스턴스입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj1과 obj2는 다른 인스턴스입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":28,"column":1,"offset":717},"end":{"line":41,"column":4,"offset":1111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Singleton 인스턴스는 무조건 1개만 존재하고 있기 때문에 obj1과 obj2는 동일한 인스턴스이다","position":{"start":{"line":43,"column":3,"offset":1115},"end":{"line":43,"column":61,"offset":1173}}}],"position":{"start":{"line":43,"column":3,"offset":1115},"end":{"line":43,"column":61,"offset":1173}}},{"type":"text","value":"\n"}],"position":{"start":{"line":43,"column":1,"offset":1113},"end":{"line":44,"column":1,"offset":1174}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"실행 시 ","position":{"start":{"line":45,"column":3,"offset":1177},"end":{"line":45,"column":8,"offset":1182}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"“Singleton main start”","position":{"start":{"line":45,"column":9,"offset":1183},"end":{"line":45,"column":31,"offset":1205}}}],"position":{"start":{"line":45,"column":8,"offset":1182},"end":{"line":45,"column":32,"offset":1206}}},{"type":"text","value":" 출력 이후에 ","position":{"start":{"line":45,"column":32,"offset":1206},"end":{"line":45,"column":40,"offset":1214}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"“싱글톤 인스턴스 생성”","position":{"start":{"line":45,"column":41,"offset":1215},"end":{"line":45,"column":54,"offset":1228}}}],"position":{"start":{"line":45,"column":40,"offset":1214},"end":{"line":45,"column":55,"offset":1229}}},{"type":"text","value":" 이 출력된다. 시스템 내에서 1개만 static 하게 존재한다고 해도 getInstance()로 호출하기 전에는 생성되지 않는다는 말이 된다.","position":{"start":{"line":45,"column":55,"offset":1229},"end":{"line":45,"column":135,"offset":1309}}}],"position":{"start":{"line":45,"column":3,"offset":1177},"end":{"line":45,"column":135,"offset":1309}}},{"type":"text","value":"\n"}],"position":{"start":{"line":45,"column":1,"offset":1175},"end":{"line":45,"column":135,"offset":1309}}},{"type":"text","value":"\n"}],"position":{"start":{"line":43,"column":1,"offset":1113},"end":{"line":45,"column":135,"offset":1309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"연습문제","position":{"start":{"line":47,"column":6,"offset":1316},"end":{"line":47,"column":10,"offset":1320}}}],"position":{"start":{"line":47,"column":1,"offset":1311},"end":{"line":47,"column":10,"offset":1320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"TicketMaker를 Singleton 클래스로 수정","position":{"start":{"line":49,"column":4,"offset":1325},"end":{"line":49,"column":34,"offset":1355}}}],"position":{"start":{"line":49,"column":1,"offset":1322},"end":{"line":49,"column":34,"offset":1355}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":1322},"end":{"line":49,"column":34,"offset":1355}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TicketMaker</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticket <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getNextTicketNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> ticket<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":51,"column":1,"offset":1357},"end":{"line":58,"column":4,"offset":1498}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TicketMaker</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ticket <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TicketMaker</span> ticketMaker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TicketMaker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TicketMaker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TicketMaker</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> ticketMaker<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getNextTicketNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> ticket<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":60,"column":1,"offset":1500},"end":{"line":76,"column":4,"offset":1835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{"start":2},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"인스턴스의 개수가 3개로 한정돼있는 클래스 Triple을 만들어라","position":{"start":{"line":78,"column":4,"offset":1840},"end":{"line":78,"column":40,"offset":1876}}}],"position":{"start":{"line":78,"column":1,"offset":1837},"end":{"line":78,"column":40,"offset":1876}}},{"type":"text","value":"\n"}],"position":{"start":{"line":78,"column":1,"offset":1837},"end":{"line":78,"column":40,"offset":1876}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Triple</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Triple</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> triples <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Triple</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Triple</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Triple</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Triple</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Triple</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">&lt;</span> triples<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> triples<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> \n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"This is instance \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":80,"column":1,"offset":1878},"end":{"line":100,"column":4,"offset":2341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Prototype 패턴","position":{"start":{"line":102,"column":5,"offset":2347},"end":{"line":102,"column":17,"offset":2359}}}],"position":{"start":{"line":102,"column":1,"offset":2343},"end":{"line":102,"column":17,"offset":2359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"인스턴스를 새로 생성하는게 아니라 이미 생성된걸 복사","position":{"start":{"line":104,"column":3,"offset":2363},"end":{"line":104,"column":32,"offset":2392}}}],"position":{"start":{"line":104,"column":3,"offset":2363},"end":{"line":104,"column":32,"offset":2392}}},{"type":"text","value":"\n"}],"position":{"start":{"line":104,"column":1,"offset":2361},"end":{"line":104,"column":32,"offset":2392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"클래스 종류가 너무 많아지면 그만큼 소스 파일도 많아지고, 그러면 관리하기 어려워지니, 일일이 정의하지 말고 복사해서 쓰라는 것","position":{"start":{"line":106,"column":1,"offset":2394},"end":{"line":106,"column":72,"offset":2465}}}],"position":{"start":{"line":106,"column":1,"offset":2394},"end":{"line":106,"column":72,"offset":2465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"예제 프로그램 - 문자열 강조 프로그램","position":{"start":{"line":108,"column":6,"offset":2472},"end":{"line":108,"column":27,"offset":2493}}}],"position":{"start":{"line":108,"column":1,"offset":2467},"end":{"line":108,"column":27,"offset":2493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"문자열에 밑줄이나, 박스를 쳐주는 프로그램","position":{"start":{"line":110,"column":1,"offset":2495},"end":{"line":110,"column":24,"offset":2518}}}],"position":{"start":{"line":110,"column":1,"offset":2495},"end":{"line":110,"column":24,"offset":2518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"text","value":"Package","position":{"start":{"line":112,"column":2,"offset":2521},"end":{"line":112,"column":9,"offset":2528}}}],"position":{"start":{"line":112,"column":2,"offset":2521},"end":{"line":112,"column":9,"offset":2528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"text","value":"Name","position":{"start":{"line":112,"column":10,"offset":2529},"end":{"line":112,"column":14,"offset":2533}}}],"position":{"start":{"line":112,"column":10,"offset":2529},"end":{"line":112,"column":14,"offset":2533}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"text","value":"Description","position":{"start":{"line":112,"column":15,"offset":2534},"end":{"line":112,"column":26,"offset":2545}}}],"position":{"start":{"line":112,"column":15,"offset":2534},"end":{"line":112,"column":26,"offset":2545}}},{"type":"text","value":"\n"}],"position":{"start":{"line":112,"column":1,"offset":2520},"end":{"line":112,"column":27,"offset":2546}}},{"type":"text","value":"\n"}],"position":{"start":{"line":112,"column":1,"offset":2520},"end":{"line":112,"column":27,"offset":2546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"framework","position":{"start":{"line":114,"column":2,"offset":2575},"end":{"line":114,"column":11,"offset":2584}}}],"position":{"start":{"line":114,"column":2,"offset":2575},"end":{"line":114,"column":11,"offset":2584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Product","position":{"start":{"line":114,"column":12,"offset":2585},"end":{"line":114,"column":19,"offset":2592}}}],"position":{"start":{"line":114,"column":12,"offset":2585},"end":{"line":114,"column":19,"offset":2592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"추상 메소드 use()와 createClone()이 정의되어 있는 인터페이스","position":{"start":{"line":114,"column":20,"offset":2593},"end":{"line":114,"column":62,"offset":2635}}}],"position":{"start":{"line":114,"column":20,"offset":2593},"end":{"line":114,"column":62,"offset":2635}}},{"type":"text","value":"\n"}],"position":{"start":{"line":114,"column":1,"offset":2574},"end":{"line":114,"column":63,"offset":2636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"framework","position":{"start":{"line":115,"column":2,"offset":2638},"end":{"line":115,"column":11,"offset":2647}}}],"position":{"start":{"line":115,"column":2,"offset":2638},"end":{"line":115,"column":11,"offset":2647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Manager","position":{"start":{"line":115,"column":12,"offset":2648},"end":{"line":115,"column":19,"offset":2655}}}],"position":{"start":{"line":115,"column":12,"offset":2648},"end":{"line":115,"column":19,"offset":2655}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"createClone()을 사용해서 인스턴스를 복제하는 클래스","position":{"start":{"line":115,"column":20,"offset":2656},"end":{"line":115,"column":54,"offset":2690}}}],"position":{"start":{"line":115,"column":20,"offset":2656},"end":{"line":115,"column":54,"offset":2690}}},{"type":"text","value":"\n"}],"position":{"start":{"line":115,"column":1,"offset":2637},"end":{"line":115,"column":55,"offset":2691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[],"position":{"start":{"line":116,"column":2,"offset":2693},"end":{"line":116,"column":2,"offset":2693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Boxer","position":{"start":{"line":116,"column":3,"offset":2694},"end":{"line":116,"column":8,"offset":2699}}}],"position":{"start":{"line":116,"column":3,"offset":2694},"end":{"line":116,"column":8,"offset":2699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"문자열에 박스를 쳐주는 클래스, Product를 구현","position":{"start":{"line":116,"column":9,"offset":2700},"end":{"line":116,"column":38,"offset":2729}}}],"position":{"start":{"line":116,"column":9,"offset":2700},"end":{"line":116,"column":38,"offset":2729}}},{"type":"text","value":"\n"}],"position":{"start":{"line":116,"column":1,"offset":2692},"end":{"line":116,"column":39,"offset":2730}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[],"position":{"start":{"line":117,"column":2,"offset":2732},"end":{"line":117,"column":2,"offset":2732}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Underliner","position":{"start":{"line":117,"column":3,"offset":2733},"end":{"line":117,"column":13,"offset":2743}}}],"position":{"start":{"line":117,"column":3,"offset":2733},"end":{"line":117,"column":13,"offset":2743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"문자열에 밑줄을 쳐주는 클래스, Product를 구현","position":{"start":{"line":117,"column":14,"offset":2744},"end":{"line":117,"column":43,"offset":2773}}}],"position":{"start":{"line":117,"column":14,"offset":2744},"end":{"line":117,"column":43,"offset":2773}}},{"type":"text","value":"\n"}],"position":{"start":{"line":117,"column":1,"offset":2731},"end":{"line":117,"column":44,"offset":2774}}},{"type":"text","value":"\n"}],"position":{"start":{"line":114,"column":1,"offset":2574},"end":{"line":117,"column":44,"offset":2774}}},{"type":"text","value":"\n"}],"position":{"start":{"line":112,"column":1,"offset":2520},"end":{"line":117,"column":44,"offset":2774}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> framework<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Product</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Cloneable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span> <span class=\"token function\">createClone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":119,"column":1,"offset":2776},"end":{"line":126,"column":4,"offset":2921}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> framework<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Manager</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span> showcase <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Product</span> proto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        showcase<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> proto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> protoname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Product</span> p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">)</span> showcase<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>protoname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">createClone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":128,"column":1,"offset":2923},"end":{"line":144,"column":4,"offset":3288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Prototype들의 인터페이스인 Product와, 그 Prototype들을 통해 clone 생성을 관리하는 Manager 클래스이다.","position":{"start":{"line":146,"column":1,"offset":3290},"end":{"line":146,"column":76,"offset":3365}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":146,"column":76,"offset":3365},"end":{"line":147,"column":1,"offset":3368}}},{"type":"text","value":"\n"},{"type":"text","value":"Product 인터페이스는 Clonable을 상속하는데 Cloneable은 clone() 메소드를 사용할 수 있게 해주는 (clone이 가능한 객체라는 것을 알려주는) 역할을 한다.","position":{"start":{"line":147,"column":1,"offset":3368},"end":{"line":147,"column":102,"offset":3469}}}],"position":{"start":{"line":146,"column":1,"offset":3290},"end":{"line":147,"column":102,"offset":3469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":149,"column":1,"offset":3471},"end":{"line":149,"column":4,"offset":3474}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> framework<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Underliner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Product</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">char</span> liner<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Underliner</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> liner<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>liner <span class=\"token operator\">=</span> liner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> strLen <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> strLen<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>liner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span> <span class=\"token function\">createClone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Product</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">)</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CloneNotSupportedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":151,"column":1,"offset":3476},"end":{"line":182,"column":4,"offset":4191}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> framework<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Boxer</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Product</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">char</span> decochar<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Boxer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> decochar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>decochar <span class=\"token operator\">=</span> decochar<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> strLen <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> strLen <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>decochar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> decochar <span class=\"token operator\">+</span> str <span class=\"token operator\">+</span> decochar <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> strLen <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>decochar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Product</span> <span class=\"token function\">createClone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Product</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">)</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CloneNotSupportedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":184,"column":1,"offset":4193},"end":{"line":219,"column":4,"offset":5026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Underliner, Boxer는 Product의 구현체로, 실제로 clone될 Prototype이 된다.","position":{"start":{"line":221,"column":1,"offset":5028},"end":{"line":221,"column":60,"offset":5087}}}],"position":{"start":{"line":221,"column":1,"offset":5028},"end":{"line":221,"column":60,"offset":5087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":223,"column":1,"offset":5089},"end":{"line":223,"column":4,"offset":5092}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> framework<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Manager</span> manager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Manager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Underliner</span> underlinerProto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Underliner</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Boxer</span> boxer1Proto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boxer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Boxer</span> boxer2Proto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boxer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        manager<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"underliner\"</span><span class=\"token punctuation\">,</span> underlinerProto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        manager<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"boxer1\"</span><span class=\"token punctuation\">,</span> boxer1Proto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        manager<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"boxer2\"</span><span class=\"token punctuation\">,</span> boxer2Proto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Product</span> p1 <span class=\"token operator\">=</span> manager<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"underliner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Product</span> p2 <span class=\"token operator\">=</span> manager<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"boxer1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Product</span> p3 <span class=\"token operator\">=</span> manager<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"boxer2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        p1<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p3<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":225,"column":1,"offset":5094},"end":{"line":247,"column":4,"offset":5784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Product p1, p2, p3는 생성자를 통해 생성된 객체가 아니라 new Underliner(), new Boxer() 등으로 이미 생성된 Prototype을 복사한 객체이다. ","position":{"start":{"line":249,"column":1,"offset":5786},"end":{"line":249,"column":103,"offset":5888}}}],"position":{"start":{"line":249,"column":1,"offset":5786},"end":{"line":249,"column":103,"offset":5888}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":251,"column":1,"offset":5890}}}}