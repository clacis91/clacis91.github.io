{"componentChunkName":"component---src-templates-blog-post-js","path":"/java-study-1/","webpackCompilationHash":"15ef349d5d8dbce251af","result":{"data":{"site":{"siteMetadata":{"title":"기록","author":"WJNAM"}},"markdownRemark":{"id":"9aa01314-d53e-5f5d-bb6c-c3472dcb4b98","excerpt":"시작Reference Book : 자바를 다루는 기술 (2014), 김병부, 길벗Fundamental안다고 생각하지만 모르고 있는 것들JVMWrite once, run everywhere기존의 언어의 경우 OS에 맞는 Libray / API…","html":"<h1>시작</h1>\n<p>Reference Book : <a href=\"https://www.gilbut.co.kr/book/view?bookcode=BN000854\">자바를 다루는 기술 (2014)</a>, 김병부, 길벗</p>\n<h2>Fundamental</h2>\n<p>안다고 생각하지만 모르고 있는 것들</p>\n<hr>\n<h3>JVM</h3>\n<blockquote>\n<p>Write once, run everywhere</p>\n</blockquote>\n<p>기존의 언어의 경우 OS에 맞는 Libray / API 등을 가져와 쓰거나 그 특성에 맞게 개발해야하는 불편함이 존재했다. </p>\n<p>JVM은 OS와 Java 프로그램의 매개체 역할을 하고, Java Application은 JVM 위에서 동작하도록 설계되어 있다. 각각에 맞는 JVM이 개발되어 있으니 개발자가 OS 환경까지 신경쓰지 말자는 것.</p>\n<h4>JVM의 구조</h4>\n<ol>\n<li>\n<p>클래스 파일</p>\n</li>\n<li>\n<p>클래스 로더 서브 시스템</p>\n</li>\n<li>\n<p>실행 데이터 영역</p>\n</li>\n<li>\n<p>메소드 영역</p>\n</li>\n<li>\n<p>스택 영역</p>\n</li>\n<li>\n<p>힙 영역</p>\n</li>\n<li>\n<p>레지스터 영역</p>\n</li>\n<li>\n<p>네이티브 메소드 영역</p>\n</li>\n<li>\n<p>Young Generation 영역</p>\n</li>\n<li>\n<p>Old 영역</p>\n</li>\n<li>\n<p>Permanent 영역</p>\n</li>\n</ol>","frontmatter":{"title":"Java Study (1)","date":"July 19, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/java-study-1/","previous":{"fields":{"slug":"/lombok-setting/"},"frontmatter":{"title":"Lombok annotations"}},"next":null}}}