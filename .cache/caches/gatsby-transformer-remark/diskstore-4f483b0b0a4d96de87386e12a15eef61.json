{"expireTime":9007200821216465000,"key":"transformer-remark-markdown-html-ast-b331f63a0062fd37487f83fbb2d31139-gatsby-remark-prismjsgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Reference Book : ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":18,"offset":18}}},{"type":"element","tagName":"a","properties":{"href":"https://www.youngjin.com/book/book_detail.asp?prod_cd=9788931436914&seq=4628&cate_cd=1&child_cate_cd=&goPage=11&orderByCd=3"},"children":[{"type":"text","value":"Java 언어로 배우는 디자인 패턴 입문","position":{"start":{"line":2,"column":19,"offset":19},"end":{"line":2,"column":41,"offset":41}}}],"position":{"start":{"line":2,"column":18,"offset":18},"end":{"line":2,"column":167,"offset":167}}},{"type":"text","value":", Yuki Hiroshi, 영진닷컴","position":{"start":{"line":2,"column":167,"offset":167},"end":{"line":2,"column":187,"offset":187}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":187,"offset":187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":4,"column":1,"offset":189},"end":{"line":4,"column":4,"offset":192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Observer 패턴","position":{"start":{"line":6,"column":5,"offset":198},"end":{"line":6,"column":16,"offset":209}}}],"position":{"start":{"line":6,"column":1,"offset":194},"end":{"line":6,"column":16,"offset":209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"관찰 대상의 상태가 변하면 관찰자에게 알려주는 패턴","position":{"start":{"line":8,"column":3,"offset":213},"end":{"line":8,"column":31,"offset":241}}}],"position":{"start":{"line":8,"column":3,"offset":213},"end":{"line":8,"column":31,"offset":241}}},{"type":"text","value":"\n"}],"position":{"start":{"line":8,"column":1,"offset":211},"end":{"line":8,"column":31,"offset":241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"객체의 상태 변화를 관찰하는 관찰자들의 목록을 객체에 등록하여 상태 변화가 있을 때마다 메소드 등을 통해 객체가 각 Observer에게 통지하도록 한다. Pub-Sub 모델을 따르는 패턴이다.","position":{"start":{"line":10,"column":1,"offset":243},"end":{"line":10,"column":108,"offset":350}}}],"position":{"start":{"line":10,"column":1,"offset":243},"end":{"line":10,"column":108,"offset":350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"예제 프로그램","position":{"start":{"line":12,"column":6,"offset":357},"end":{"line":12,"column":13,"offset":364}}}],"position":{"start":{"line":12,"column":1,"offset":352},"end":{"line":12,"column":13,"offset":364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"랜덤 넘버가 발생하면 관찰중인 객체에서 그 넘버를 출력하는 프로그램","position":{"start":{"line":14,"column":1,"offset":366},"end":{"line":14,"column":38,"offset":403}}}],"position":{"start":{"line":14,"column":1,"offset":366},"end":{"line":14,"column":38,"offset":403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"text","value":"Name","position":{"start":{"line":16,"column":2,"offset":406},"end":{"line":16,"column":6,"offset":410}}}],"position":{"start":{"line":16,"column":2,"offset":406},"end":{"line":16,"column":6,"offset":410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description","position":{"start":{"line":16,"column":7,"offset":411},"end":{"line":16,"column":18,"offset":422}}}],"position":{"start":{"line":16,"column":7,"offset":411},"end":{"line":16,"column":18,"offset":422}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":405},"end":{"line":16,"column":19,"offset":423}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":405},"end":{"line":16,"column":19,"offset":423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Observer","position":{"start":{"line":18,"column":2,"offset":444},"end":{"line":18,"column":10,"offset":452}}}],"position":{"start":{"line":18,"column":2,"offset":444},"end":{"line":18,"column":10,"offset":452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"관찰자 인터페이스","position":{"start":{"line":18,"column":11,"offset":453},"end":{"line":18,"column":20,"offset":462}}}],"position":{"start":{"line":18,"column":11,"offset":453},"end":{"line":18,"column":20,"offset":462}}},{"type":"text","value":"\n"}],"position":{"start":{"line":18,"column":1,"offset":443},"end":{"line":18,"column":21,"offset":463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"NumberGenerator","position":{"start":{"line":19,"column":2,"offset":465},"end":{"line":19,"column":17,"offset":480}}}],"position":{"start":{"line":19,"column":2,"offset":465},"end":{"line":19,"column":17,"offset":480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"넘버를 생성기 클래스","position":{"start":{"line":19,"column":18,"offset":481},"end":{"line":19,"column":29,"offset":492}}}],"position":{"start":{"line":19,"column":18,"offset":481},"end":{"line":19,"column":29,"offset":492}}},{"type":"text","value":"\n"}],"position":{"start":{"line":19,"column":1,"offset":464},"end":{"line":19,"column":30,"offset":493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"RandomNumberGenerator","position":{"start":{"line":20,"column":2,"offset":495},"end":{"line":20,"column":23,"offset":516}}}],"position":{"start":{"line":20,"column":2,"offset":495},"end":{"line":20,"column":23,"offset":516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"랜덤 넘버 생성기 클래스","position":{"start":{"line":20,"column":24,"offset":517},"end":{"line":20,"column":37,"offset":530}}}],"position":{"start":{"line":20,"column":24,"offset":517},"end":{"line":20,"column":37,"offset":530}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":494},"end":{"line":20,"column":38,"offset":531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"DigitObserver","position":{"start":{"line":21,"column":2,"offset":533},"end":{"line":21,"column":15,"offset":546}}}],"position":{"start":{"line":21,"column":2,"offset":533},"end":{"line":21,"column":15,"offset":546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"숫자로 넘버를 표시해주는 클래스","position":{"start":{"line":21,"column":16,"offset":547},"end":{"line":21,"column":33,"offset":564}}}],"position":{"start":{"line":21,"column":16,"offset":547},"end":{"line":21,"column":33,"offset":564}}},{"type":"text","value":"\n"}],"position":{"start":{"line":21,"column":1,"offset":532},"end":{"line":21,"column":34,"offset":565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"GraphObserver","position":{"start":{"line":22,"column":2,"offset":567},"end":{"line":22,"column":15,"offset":580}}}],"position":{"start":{"line":22,"column":2,"offset":567},"end":{"line":22,"column":15,"offset":580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"그래프(*로 표시)로 넘버를 표시해주는 클래스","position":{"start":{"line":22,"column":16,"offset":581},"end":{"line":22,"column":41,"offset":606}}}],"position":{"start":{"line":22,"column":16,"offset":581},"end":{"line":22,"column":41,"offset":606}}},{"type":"text","value":"\n"}],"position":{"start":{"line":22,"column":1,"offset":566},"end":{"line":22,"column":42,"offset":607}}},{"type":"text","value":"\n"}],"position":{"start":{"line":18,"column":1,"offset":443},"end":{"line":22,"column":42,"offset":607}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":405},"end":{"line":22,"column":42,"offset":607}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberGenerator</span> generator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":24,"column":1,"offset":609},"end":{"line":28,"column":4,"offset":701}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NumberGenerator</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ArrayList</span> observers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Observer</span> observer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        observers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteObserver</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Observer</span> observer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        observers<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">notifyObservers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Iterator</span> it <span class=\"token operator\">=</span> observers<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Observer</span> observer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Observer</span><span class=\"token punctuation\">)</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            observer<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":30,"column":1,"offset":703},"end":{"line":53,"column":4,"offset":1334}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Random</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RandomNumberGenerator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">NumberGenerator</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Random</span> random <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> number<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">notifyObservers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":55,"column":1,"offset":1336},"end":{"line":72,"column":4,"offset":1715}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DigitObserver</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberGenerator</span> generator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DigitObserver : \"</span> <span class=\"token operator\">+</span> generator<span class=\"token punctuation\">.</span><span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":74,"column":1,"offset":1717},"end":{"line":85,"column":4,"offset":2039}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GraphObserver</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Observer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberGenerator</span> generator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> generator<span class=\"token punctuation\">.</span><span class=\"token function\">getNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">StringBuffer</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GraphObserver : \"</span> <span class=\"token operator\">+</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":87,"column":1,"offset":2041},"end":{"line":103,"column":4,"offset":2524}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">NumberGenerator</span> generator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RandomNumberGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Observer</span> observer1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DigitObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Observer</span> observer2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GraphObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        generator<span class=\"token punctuation\">.</span><span class=\"token function\">addObserver</span><span class=\"token punctuation\">(</span>observer1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        generator<span class=\"token punctuation\">.</span><span class=\"token function\">addObserver</span><span class=\"token punctuation\">(</span>observer2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        generator<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":105,"column":1,"offset":2526},"end":{"line":116,"column":4,"offset":2888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"NumberGenerator를 관찰하는 Observer를 등록(addObserver)해두면, generator에서 이벤트가 발생할때 그 정보를 등록되어있는 Observer들에게 알리는(update) 구조","position":{"start":{"line":118,"column":1,"offset":2890},"end":{"line":118,"column":114,"offset":3003}}}],"position":{"start":{"line":118,"column":1,"offset":2890},"end":{"line":118,"column":114,"offset":3003}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Memento 패턴","position":{"start":{"line":120,"column":5,"offset":3009},"end":{"line":120,"column":15,"offset":3019}}}],"position":{"start":{"line":120,"column":1,"offset":3005},"end":{"line":120,"column":15,"offset":3019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Undo","position":{"start":{"line":122,"column":3,"offset":3023},"end":{"line":122,"column":7,"offset":3027}}}],"position":{"start":{"line":122,"column":3,"offset":3023},"end":{"line":122,"column":7,"offset":3027}}},{"type":"text","value":"\n"}],"position":{"start":{"line":122,"column":1,"offset":3021},"end":{"line":122,"column":7,"offset":3027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"인스턴스의 상태를 기록해서 나중에 인스턴스를 그 시점의 상태로 되돌릴 수 있게 하는 패턴","position":{"start":{"line":124,"column":1,"offset":3029},"end":{"line":124,"column":50,"offset":3078}}}],"position":{"start":{"line":124,"column":1,"offset":3029},"end":{"line":124,"column":50,"offset":3078}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"예제 프로그램","position":{"start":{"line":126,"column":6,"offset":3085},"end":{"line":126,"column":13,"offset":3092}}}],"position":{"start":{"line":126,"column":1,"offset":3080},"end":{"line":126,"column":13,"offset":3092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"주사위를 던져서 좋은수가 나오면 돈이 증가하고, 나쁜수가 나오면 돈이 감소한다. 돈이 일정 수준으로 떨어지면 제일 돈이 많았을 때로 리셋한다.","position":{"start":{"line":128,"column":1,"offset":3094},"end":{"line":128,"column":80,"offset":3173}}}],"position":{"start":{"line":128,"column":1,"offset":3094},"end":{"line":128,"column":80,"offset":3173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"text","value":"Package","position":{"start":{"line":130,"column":2,"offset":3176},"end":{"line":130,"column":9,"offset":3183}}}],"position":{"start":{"line":130,"column":2,"offset":3176},"end":{"line":130,"column":9,"offset":3183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"text","value":"Name","position":{"start":{"line":130,"column":10,"offset":3184},"end":{"line":130,"column":14,"offset":3188}}}],"position":{"start":{"line":130,"column":10,"offset":3184},"end":{"line":130,"column":14,"offset":3188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description","position":{"start":{"line":130,"column":15,"offset":3189},"end":{"line":130,"column":26,"offset":3200}}}],"position":{"start":{"line":130,"column":15,"offset":3189},"end":{"line":130,"column":26,"offset":3200}}},{"type":"text","value":"\n"}],"position":{"start":{"line":130,"column":1,"offset":3175},"end":{"line":130,"column":27,"offset":3201}}},{"type":"text","value":"\n"}],"position":{"start":{"line":130,"column":1,"offset":3175},"end":{"line":130,"column":27,"offset":3201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"game","position":{"start":{"line":132,"column":2,"offset":3230},"end":{"line":132,"column":6,"offset":3234}}}],"position":{"start":{"line":132,"column":2,"offset":3230},"end":{"line":132,"column":6,"offset":3234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Memento","position":{"start":{"line":132,"column":7,"offset":3235},"end":{"line":132,"column":14,"offset":3242}}}],"position":{"start":{"line":132,"column":7,"offset":3235},"end":{"line":132,"column":14,"offset":3242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Gamer의 상태를 나타내는 클래스","position":{"start":{"line":132,"column":15,"offset":3243},"end":{"line":132,"column":34,"offset":3262}}}],"position":{"start":{"line":132,"column":15,"offset":3243},"end":{"line":132,"column":34,"offset":3262}}},{"type":"text","value":"\n"}],"position":{"start":{"line":132,"column":1,"offset":3229},"end":{"line":132,"column":35,"offset":3263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"game","position":{"start":{"line":133,"column":2,"offset":3265},"end":{"line":133,"column":6,"offset":3269}}}],"position":{"start":{"line":133,"column":2,"offset":3265},"end":{"line":133,"column":6,"offset":3269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Gamer","position":{"start":{"line":133,"column":7,"offset":3270},"end":{"line":133,"column":12,"offset":3275}}}],"position":{"start":{"line":133,"column":7,"offset":3270},"end":{"line":133,"column":12,"offset":3275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"게이머, Memento 인스턴스를 만든다","position":{"start":{"line":133,"column":13,"offset":3276},"end":{"line":133,"column":35,"offset":3298}}}],"position":{"start":{"line":133,"column":13,"offset":3276},"end":{"line":133,"column":35,"offset":3298}}},{"type":"text","value":"\n"}],"position":{"start":{"line":133,"column":1,"offset":3264},"end":{"line":133,"column":36,"offset":3299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[],"position":{"start":{"line":134,"column":2,"offset":3301},"end":{"line":134,"column":2,"offset":3301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"Main","position":{"start":{"line":134,"column":3,"offset":3302},"end":{"line":134,"column":7,"offset":3306}}}],"position":{"start":{"line":134,"column":3,"offset":3302},"end":{"line":134,"column":7,"offset":3306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"게임을 진행시키는 클래스, Memento 인스턴스를 저장해두고, 필요하면 로드한다","position":{"start":{"line":134,"column":8,"offset":3307},"end":{"line":134,"column":53,"offset":3352}}}],"position":{"start":{"line":134,"column":8,"offset":3307},"end":{"line":134,"column":53,"offset":3352}}},{"type":"text","value":"\n"}],"position":{"start":{"line":134,"column":1,"offset":3300},"end":{"line":134,"column":54,"offset":3353}}},{"type":"text","value":"\n"}],"position":{"start":{"line":132,"column":1,"offset":3229},"end":{"line":134,"column":54,"offset":3353}}},{"type":"text","value":"\n"}],"position":{"start":{"line":130,"column":1,"offset":3175},"end":{"line":134,"column":54,"offset":3353}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Memento</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Memento</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":136,"column":1,"offset":3355},"end":{"line":146,"column":4,"offset":3521}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Random</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Gamer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Random</span> random <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Gamer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> dice <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">+=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 증가\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">/=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 절반 감소\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 1/10 감소\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 2배 증가\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"변화 없음\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Memento</span> <span class=\"token function\">createMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Memento</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Memento</span><span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">restoreMemento</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Memento</span> memento<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> memento<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"[money = \"</span> <span class=\"token operator\">+</span> money <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":148,"column":1,"offset":3523},"end":{"line":196,"column":4,"offset":4615}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Gamer</span> gamer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gamer</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Memento</span> memento <span class=\"token operator\">=</span> gamer<span class=\"token punctuation\">.</span><span class=\"token function\">createMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==== \"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"현재 상태 : \"</span> <span class=\"token operator\">+</span> gamer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            gamer<span class=\"token punctuation\">.</span><span class=\"token function\">bet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gamer<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> memento<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 돈이 늘었으면 현재 상태 저장</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"대박\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                memento <span class=\"token operator\">=</span> gamer<span class=\"token punctuation\">.</span><span class=\"token function\">createMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gamer<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>memento<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 좋았을때보다 너무 감소하면 로드</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"리셋\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                gamer<span class=\"token punctuation\">.</span><span class=\"token function\">restoreMemento</span><span class=\"token punctuation\">(</span>memento<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":198,"column":1,"offset":4617},"end":{"line":228,"column":4,"offset":5495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Memento 패턴에서 객체들의 역할","position":{"start":{"line":230,"column":7,"offset":5503},"end":{"line":230,"column":27,"offset":5523}}}],"position":{"start":{"line":230,"column":1,"offset":5497},"end":{"line":230,"column":27,"offset":5523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Memento","position":{"start":{"line":232,"column":3,"offset":5527},"end":{"line":232,"column":10,"offset":5534}}}],"position":{"start":{"line":232,"column":1,"offset":5525},"end":{"line":232,"column":10,"offset":5534}}},{"type":"text","value":"\n"}],"position":{"start":{"line":232,"column":1,"offset":5525},"end":{"line":232,"column":10,"offset":5534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"현재 상태에 대한 정보를 가지고 있는 객체","position":{"start":{"line":234,"column":1,"offset":5536},"end":{"line":234,"column":24,"offset":5559}}}],"position":{"start":{"line":234,"column":1,"offset":5536},"end":{"line":234,"column":24,"offset":5559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Originator ","position":{"start":{"line":236,"column":3,"offset":5563},"end":{"line":236,"column":14,"offset":5574}}}],"position":{"start":{"line":236,"column":1,"offset":5561},"end":{"line":236,"column":14,"offset":5574}}},{"type":"text","value":"\n"}],"position":{"start":{"line":236,"column":1,"offset":5561},"end":{"line":236,"column":14,"offset":5574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"현재 상태의 Memento를 저장하거나, 리셋시키는 동작을 수행하는 객체","position":{"start":{"line":238,"column":1,"offset":5576},"end":{"line":238,"column":41,"offset":5616}}}],"position":{"start":{"line":238,"column":1,"offset":5576},"end":{"line":238,"column":41,"offset":5616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Caretaker","position":{"start":{"line":240,"column":3,"offset":5620},"end":{"line":240,"column":12,"offset":5629}}}],"position":{"start":{"line":240,"column":1,"offset":5618},"end":{"line":240,"column":12,"offset":5629}}},{"type":"text","value":"\n"}],"position":{"start":{"line":240,"column":1,"offset":5618},"end":{"line":240,"column":12,"offset":5629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"언제 저장을 할지, 언제 리셋을 할지 결정하고 Originator 에게 그 동작을 수행시키는 객체","position":{"start":{"line":242,"column":1,"offset":5631},"end":{"line":242,"column":55,"offset":5685}}}],"position":{"start":{"line":242,"column":1,"offset":5631},"end":{"line":242,"column":55,"offset":5685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Originator - Caretaker 를 분리시키는 것이 핵심","position":{"start":{"line":244,"column":1,"offset":5687},"end":{"line":244,"column":37,"offset":5723}}}],"position":{"start":{"line":244,"column":1,"offset":5687},"end":{"line":244,"column":37,"offset":5723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"연습 문제","position":{"start":{"line":246,"column":6,"offset":5730},"end":{"line":246,"column":11,"offset":5735}}}],"position":{"start":{"line":246,"column":1,"offset":5725},"end":{"line":246,"column":11,"offset":5735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Q. Serializable 인터페이스를 활용해서, 이전 상태에 대한 파일이 남아있다면 프로그램 시작 시 불러오고 아니면 100원을 갖고 시작하도록 프로그램을 수정해보자","position":{"start":{"line":248,"column":1,"offset":5737},"end":{"line":248,"column":95,"offset":5831}}}],"position":{"start":{"line":248,"column":1,"offset":5737},"end":{"line":248,"column":95,"offset":5831}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ObjectInput</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ObjectInputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ObjectOutput</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileManager</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> FILENAME<span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Object</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">File</span> file<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FileManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filename<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>FILENAME <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ObjectInput</span> oi <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectInputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            obj <span class=\"token operator\">=</span> oi<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ObjectOutput</span> oo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span>FILENAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            oo<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":250,"column":1,"offset":5833},"end":{"line":297,"column":4,"offset":6998}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Random</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Gamer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Random</span> random <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">FileManager</span> mementoFileManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileManager</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"game.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Memento</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Memento</span> m<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mementoFileManager<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            m <span class=\"token operator\">=</span> <span class=\"token function\">loadMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n            m <span class=\"token operator\">=</span> <span class=\"token function\">createMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> money<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> dice <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">+=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 증가\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">/=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 절반 감소\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 1/10 감소\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dice <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            money <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"소지금 2배 증가\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"변화 없음\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Memento</span> <span class=\"token function\">createMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Memento</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Memento</span><span class=\"token punctuation\">(</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Memento</span> <span class=\"token function\">loadMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Memento</span><span class=\"token punctuation\">)</span> mementoFileManager<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Memento</span> <span class=\"token function\">saveMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Memento</span> m <span class=\"token operator\">=</span> <span class=\"token function\">createMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mementoFileManager<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">restoreMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mementoFileManager<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> <span class=\"token function\">loadMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"[money = \"</span> <span class=\"token operator\">+</span> money <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":299,"column":1,"offset":7000},"end":{"line":372,"column":4,"offset":8691}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Gamer</span> gamer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gamer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Memento</span> memento <span class=\"token operator\">=</span> gamer<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==== \"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"현재 상태 : \"</span> <span class=\"token operator\">+</span> gamer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            gamer<span class=\"token punctuation\">.</span><span class=\"token function\">bet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gamer<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> memento<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 돈이 늘었으면 현재 상태 저장</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"대박\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                memento <span class=\"token operator\">=</span> gamer<span class=\"token punctuation\">.</span><span class=\"token function\">saveMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gamer<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>memento<span class=\"token punctuation\">.</span><span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 좋았을때보다 너무 감소하면 로드</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"리셋\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                gamer<span class=\"token punctuation\">.</span><span class=\"token function\">restoreMemento</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":374,"column":1,"offset":8693},"end":{"line":404,"column":4,"offset":9550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Memento.java 는 수정사항 X","position":{"start":{"line":406,"column":3,"offset":9554},"end":{"line":406,"column":24,"offset":9575}}}],"position":{"start":{"line":406,"column":1,"offset":9552},"end":{"line":406,"column":24,"offset":9575}}},{"type":"text","value":"\n"}],"position":{"start":{"line":406,"column":1,"offset":9552},"end":{"line":406,"column":24,"offset":9575}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"State 패턴","position":{"start":{"line":408,"column":5,"offset":9581},"end":{"line":408,"column":13,"offset":9589}}}],"position":{"start":{"line":408,"column":1,"offset":9577},"end":{"line":408,"column":13,"offset":9589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"추상적인 ‘상태’를 클래스로 표현하는 패턴","position":{"start":{"line":410,"column":3,"offset":9593},"end":{"line":410,"column":26,"offset":9616}}}],"position":{"start":{"line":410,"column":3,"offset":9593},"end":{"line":410,"column":26,"offset":9616}}},{"type":"text","value":"\n"}],"position":{"start":{"line":410,"column":1,"offset":9591},"end":{"line":410,"column":26,"offset":9616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"예제 프로그램","position":{"start":{"line":412,"column":6,"offset":9623},"end":{"line":412,"column":13,"offset":9630}}}],"position":{"start":{"line":412,"column":1,"offset":9618},"end":{"line":412,"column":13,"offset":9630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"시간에 따라 경비 상태가 변화하는 경비 시스템 프로그램","position":{"start":{"line":414,"column":1,"offset":9632},"end":{"line":414,"column":31,"offset":9662}}}],"position":{"start":{"line":414,"column":1,"offset":9632},"end":{"line":414,"column":31,"offset":9662}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 금고가 1개 있다\n2. 금고는 현재 시간을 감시하고 있다\n3. 주간(9:00~16:59), 야간(17:00~8:59)\n4. 금고는 주간에만 이용 가능하며, 이용시 기록이 남는다\n5. 야간에 사용시 경비실에 비상통보가 간다</code></pre></div>","position":{"start":{"line":416,"column":1,"offset":9664},"end":{"line":422,"column":4,"offset":9798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"State 패턴이 적용되지 않는다면?","position":{"start":{"line":424,"column":7,"offset":9806},"end":{"line":424,"column":27,"offset":9826}}}],"position":{"start":{"line":424,"column":1,"offset":9800},"end":{"line":424,"column":27,"offset":9826}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>time in 주간<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 이용 및 이용 기록 저장</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>time in 야간<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 비상통보 발동</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":426,"column":1,"offset":9828},"end":{"line":433,"column":4,"offset":9918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"State 패턴이 적용되지 않는다면 위 코드와 같은 방식으로 분기를 통해 현재 시간을 파악하고, 동작을 수행하는 방식이 될것이다.","position":{"start":{"line":434,"column":1,"offset":9919},"end":{"line":434,"column":73,"offset":9991}}}],"position":{"start":{"line":434,"column":1,"offset":9919},"end":{"line":434,"column":73,"offset":9991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"State 패턴 적용","position":{"start":{"line":436,"column":7,"offset":9999},"end":{"line":436,"column":18,"offset":10010}}}],"position":{"start":{"line":436,"column":1,"offset":9993},"end":{"line":436,"column":18,"offset":10010}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> 주간 상태를 표현하는 클래스 <span class=\"token punctuation\">{</span>\n    금고 사용 메소드<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        금고사용<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":438,"column":1,"offset":10012},"end":{"line":444,"column":4,"offset":10087}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> 야간 상태를 표현하는 클래스 <span class=\"token punctuation\">{</span>\n    금고 사용 메소드<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        비상통보<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":446,"column":1,"offset":10089},"end":{"line":452,"column":4,"offset":10164}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> 상태 관리 클래스 <span class=\"token punctuation\">{</span>\n    상태 변경<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        curState <span class=\"token operator\">=</span> 주간 state<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n \nstate<span class=\"token punctuation\">.</span>금고 사용 메소드<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":454,"column":1,"offset":10166},"end":{"line":466,"column":4,"offset":10277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"마지막 줄의 ","position":{"start":{"line":468,"column":1,"offset":10279},"end":{"line":468,"column":8,"offset":10286}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"state.금고 사용 메소드();","position":{"start":{"line":468,"column":9,"offset":10287},"end":{"line":468,"column":27,"offset":10305}}}],"position":{"start":{"line":468,"column":8,"offset":10286},"end":{"line":468,"column":28,"offset":10306}}},{"type":"text","value":" 과 같은 방식으로 금고를 사용을 하는 입장에서는 현재 상태는 알 필요가 없는 형태로 만들어둔다면, 새로운 상태가 추가(주간,야간,점심시간 등으로)되거나 상태에 따른 동작이 변경되어도 의존성을 최소화 시킬 수 있다.","position":{"start":{"line":468,"column":28,"offset":10306},"end":{"line":468,"column":148,"offset":10426}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":468,"column":148,"offset":10426},"end":{"line":469,"column":1,"offset":10429}}},{"type":"text","value":"\n"},{"type":"text","value":"(대신 ","position":{"start":{"line":469,"column":1,"offset":10429},"end":{"line":469,"column":5,"offset":10433}}},{"type":"raw","value":"<b>","position":{"start":{"line":469,"column":5,"offset":10433},"end":{"line":469,"column":8,"offset":10436}}},{"type":"text","value":"상태를 관리해주는 클래스의 역할","position":{"start":{"line":469,"column":8,"offset":10436},"end":{"line":469,"column":25,"offset":10453}}},{"type":"raw","value":"</b>","position":{"start":{"line":469,"column":25,"offset":10453},"end":{"line":469,"column":29,"offset":10457}}},{"type":"text","value":"이 중요해진다.)","position":{"start":{"line":469,"column":29,"offset":10457},"end":{"line":469,"column":38,"offset":10466}}}],"position":{"start":{"line":468,"column":1,"offset":10279},"end":{"line":469,"column":38,"offset":10466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Flyweight 패턴","position":{"start":{"line":471,"column":5,"offset":10472},"end":{"line":471,"column":17,"offset":10484}}}],"position":{"start":{"line":471,"column":1,"offset":10468},"end":{"line":471,"column":17,"offset":10484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"‘new’ 를 줄이자","position":{"start":{"line":473,"column":3,"offset":10488},"end":{"line":473,"column":14,"offset":10499}}}],"position":{"start":{"line":473,"column":3,"offset":10488},"end":{"line":473,"column":14,"offset":10499}}},{"type":"text","value":"\n"}],"position":{"start":{"line":473,"column":1,"offset":10486},"end":{"line":473,"column":14,"offset":10499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이미 만들어진 인스턴스가 있다면 최대한 활용하여 메모리 사용을 줄이자는 내용","position":{"start":{"line":475,"column":1,"offset":10501},"end":{"line":475,"column":43,"offset":10543}}}],"position":{"start":{"line":475,"column":1,"offset":10501},"end":{"line":475,"column":43,"offset":10543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"예제 프로그램","position":{"start":{"line":477,"column":6,"offset":10550},"end":{"line":477,"column":13,"offset":10557}}}],"position":{"start":{"line":477,"column":1,"offset":10545},"end":{"line":477,"column":13,"offset":10557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"‘무거운 인스턴스’를 만든다는 의미로 ‘큰 숫자’를 출력하는 프로그램을 만들자. ‘큰 숫자’는 텍스트 파일로 저장돼있고 출력시 파일 내용을 그대로 활용한다.","position":{"start":{"line":479,"column":1,"offset":10559},"end":{"line":479,"column":88,"offset":10646}}}],"position":{"start":{"line":479,"column":1,"offset":10559},"end":{"line":479,"column":88,"offset":10646}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">....######......  \n..##......##....  \n..........##....  \n......####......  \n..........##....  \n..##......##....  \n....######......  \n................ </code></pre></div>","position":{"start":{"line":481,"column":1,"offset":10648},"end":{"line":490,"column":5,"offset":10807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이런식으로.","position":{"start":{"line":492,"column":1,"offset":10809},"end":{"line":492,"column":7,"offset":10815}}}],"position":{"start":{"line":492,"column":1,"offset":10809},"end":{"line":492,"column":7,"offset":10815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"text","value":"Name","position":{"start":{"line":494,"column":2,"offset":10818},"end":{"line":494,"column":6,"offset":10822}}}],"position":{"start":{"line":494,"column":2,"offset":10818},"end":{"line":494,"column":6,"offset":10822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description","position":{"start":{"line":494,"column":7,"offset":10823},"end":{"line":494,"column":18,"offset":10834}}}],"position":{"start":{"line":494,"column":7,"offset":10823},"end":{"line":494,"column":18,"offset":10834}}},{"type":"text","value":"\n"}],"position":{"start":{"line":494,"column":1,"offset":10817},"end":{"line":494,"column":19,"offset":10835}}},{"type":"text","value":"\n"}],"position":{"start":{"line":494,"column":1,"offset":10817},"end":{"line":494,"column":19,"offset":10835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"BigChar","position":{"start":{"line":496,"column":2,"offset":10856},"end":{"line":496,"column":9,"offset":10863}}}],"position":{"start":{"line":496,"column":2,"offset":10856},"end":{"line":496,"column":9,"offset":10863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"‘큰 문자’를 나타내는 클래스","position":{"start":{"line":496,"column":10,"offset":10864},"end":{"line":496,"column":26,"offset":10880}}}],"position":{"start":{"line":496,"column":10,"offset":10864},"end":{"line":496,"column":26,"offset":10880}}},{"type":"text","value":"\n"}],"position":{"start":{"line":496,"column":1,"offset":10855},"end":{"line":496,"column":27,"offset":10881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"BigCharFactory","position":{"start":{"line":497,"column":2,"offset":10883},"end":{"line":497,"column":16,"offset":10897}}}],"position":{"start":{"line":497,"column":2,"offset":10883},"end":{"line":497,"column":16,"offset":10897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"BigChar의 인스턴스를 공유하면서 생성하는 클래스","position":{"start":{"line":497,"column":17,"offset":10898},"end":{"line":497,"column":46,"offset":10927}}}],"position":{"start":{"line":497,"column":17,"offset":10898},"end":{"line":497,"column":46,"offset":10927}}},{"type":"text","value":"\n"}],"position":{"start":{"line":497,"column":1,"offset":10882},"end":{"line":497,"column":47,"offset":10928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"center"},"children":[{"type":"text","value":"BigString","position":{"start":{"line":498,"column":2,"offset":10930},"end":{"line":498,"column":11,"offset":10939}}}],"position":{"start":{"line":498,"column":2,"offset":10930},"end":{"line":498,"column":11,"offset":10939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"BigChar를 모아 ‘큰 문자열’을 나타내는 클래스","position":{"start":{"line":498,"column":12,"offset":10940},"end":{"line":498,"column":41,"offset":10969}}}],"position":{"start":{"line":498,"column":12,"offset":10940},"end":{"line":498,"column":41,"offset":10969}}},{"type":"text","value":"\n"}],"position":{"start":{"line":498,"column":1,"offset":10929},"end":{"line":498,"column":42,"offset":10970}}},{"type":"text","value":"\n"}],"position":{"start":{"line":496,"column":1,"offset":10855},"end":{"line":498,"column":42,"offset":10970}}},{"type":"text","value":"\n"}],"position":{"start":{"line":494,"column":1,"offset":10817},"end":{"line":498,"column":42,"offset":10970}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BigChar</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">char</span> charname<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> fontdata<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">BigChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> charname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>charname <span class=\"token operator\">=</span> charname<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"big\"</span> <span class=\"token operator\">+</span> charname <span class=\"token operator\">+</span> <span class=\"token string\">\".txt\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StringBuffer</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            reader<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fontdata <span class=\"token operator\">=</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fontdata <span class=\"token operator\">=</span> charname <span class=\"token operator\">+</span> <span class=\"token string\">\"?\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>fontdata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":500,"column":1,"offset":10972},"end":{"line":532,"column":4,"offset":11848}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BigCharFactory</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span> pool <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">BigCharFactory</span> sigleton <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigCharFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BigCharFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">BigCharFactory</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> sigleton<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token class-name\">BigChar</span> <span class=\"token function\">getBigChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> charname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BigChar</span> bigChar <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BigChar</span><span class=\"token punctuation\">)</span> pool<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>charname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bigChar <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bigChar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigChar</span><span class=\"token punctuation\">(</span>charname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pool<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>charname<span class=\"token punctuation\">,</span> bigChar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> bigChar<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":534,"column":1,"offset":11850},"end":{"line":553,"column":4,"offset":12413}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BigString</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BigChar</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bigString<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">BigString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        bigString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigChar</span><span class=\"token punctuation\">[</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">BigCharFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token class-name\">BigCharFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bigString<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bigString<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">getBigChar</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bigString<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bigString<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":555,"column":1,"offset":12415},"end":{"line":571,"column":4,"offset":12898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이미 만들어진 ‘큰 숫자’ 인스턴스가 존재 한다면 새로운 인스턴스는 만들 필요가 없다.","position":{"start":{"line":573,"column":3,"offset":12902},"end":{"line":573,"column":51,"offset":12950}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":573,"column":51,"offset":12950},"end":{"line":574,"column":1,"offset":12953}}},{"type":"text","value":"\n"},{"type":"text","value":"큰3은 큰3일 뿐이지, 추가적인 정보의 변동이 필요없으니(","position":{"start":{"line":574,"column":1,"offset":12953},"end":{"line":574,"column":33,"offset":12985}}},{"type":"raw","value":"<b>","position":{"start":{"line":574,"column":33,"offset":12985},"end":{"line":574,"column":36,"offset":12988}}},{"type":"text","value":"intrinsic","position":{"start":{"line":574,"column":36,"offset":12988},"end":{"line":574,"column":45,"offset":12997}}},{"type":"raw","value":"</b>","position":{"start":{"line":574,"column":45,"offset":12997},"end":{"line":574,"column":49,"offset":13001}}},{"type":"text","value":"한 정보라고 한다), 동일한 인스턴스를 공유해도 문제가 되지 않는다.","position":{"start":{"line":574,"column":49,"offset":13001},"end":{"line":574,"column":87,"offset":13039}}}],"position":{"start":{"line":573,"column":3,"offset":12902},"end":{"line":574,"column":87,"offset":13039}}},{"type":"text","value":"\n"}],"position":{"start":{"line":573,"column":1,"offset":12900},"end":{"line":575,"column":1,"offset":13040}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Garbage collecting에 유의","position":{"start":{"line":576,"column":3,"offset":13043},"end":{"line":576,"column":25,"offset":13065}}}],"position":{"start":{"line":576,"column":3,"offset":13043},"end":{"line":576,"column":25,"offset":13065}}},{"type":"text","value":"\n"}],"position":{"start":{"line":576,"column":1,"offset":13041},"end":{"line":577,"column":1,"offset":13066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이거 결국 singleton을 잘 활용하자는 내용이 되는듯?","position":{"start":{"line":578,"column":3,"offset":13069},"end":{"line":578,"column":36,"offset":13102}}}],"position":{"start":{"line":578,"column":3,"offset":13069},"end":{"line":578,"column":36,"offset":13102}}},{"type":"text","value":"\n"}],"position":{"start":{"line":578,"column":1,"offset":13067},"end":{"line":578,"column":36,"offset":13102}}},{"type":"text","value":"\n"}],"position":{"start":{"line":573,"column":1,"offset":12900},"end":{"line":578,"column":36,"offset":13102}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":579,"column":1,"offset":13103}}}}